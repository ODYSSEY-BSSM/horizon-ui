name: Auto Version and Release

on:
  push:
    branches: [main]
    paths-ignore:
      - '**.md'
      - '.github/workflows/auto-version.yml'

jobs:
  auto-version:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'pnpm'
          registry-url: 'https://registry.npmjs.org'

      - name: Install dependencies
        run: pnpm install

      - name: Run tests
        run: pnpm test:ci

      - name: Build
        run: pnpm build

      - name: Check for version bump
        id: check-version
        run: |
          # 커밋 메시지에서 버전 키워드 확인
          if [ -n "${{ github.event.head_commit.message }}" ]; then
            COMMIT_MSG="${{ github.event.head_commit.message }}"
          else
            # head_commit이 없는 경우 (force push 등) 최신 커밋 메시지 사용
            COMMIT_MSG=$(git log -1 --pretty=%B)
          fi
          echo "Commit message: $COMMIT_MSG"

          if [[ "$COMMIT_MSG" =~ \[patch\]|\[version:patch\] ]]; then
            echo "version_type=patch" >> $GITHUB_OUTPUT
            echo "should_bump=true" >> $GITHUB_OUTPUT
          elif [[ "$COMMIT_MSG" =~ \[minor\]|\[version:minor\] ]]; then
            echo "version_type=minor" >> $GITHUB_OUTPUT
            echo "should_bump=true" >> $GITHUB_OUTPUT
          elif [[ "$COMMIT_MSG" =~ \[major\]|\[version:major\] ]]; then
            echo "version_type=major" >> $GITHUB_OUTPUT
            echo "should_bump=true" >> $GITHUB_OUTPUT
          else
            echo "should_bump=false" >> $GITHUB_OUTPUT
            echo "No version bump keywords found in commit message"
          fi

      - name: Configure Git
        if: steps.check-version.outputs.should_bump == 'true'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"

      - name: Bump version
        if: steps.check-version.outputs.should_bump == 'true'
        id: bump
        run: |
          # 현재 버전 가져오기
          CURRENT_VERSION=$(node -p "require('./package.json').version")
          echo "Current version: $CURRENT_VERSION"

          # 버전 타입에 따라 올리기
          VERSION_TYPE="${{ steps.check-version.outputs.version_type }}"
          NEW_VERSION=$(npm version $VERSION_TYPE --no-git-tag-version)
          echo "New version: $NEW_VERSION"

          # 환경 변수로 설정
          echo "new_version=${NEW_VERSION}" >> $GITHUB_OUTPUT
          echo "current_version=${CURRENT_VERSION}" >> $GITHUB_OUTPUT
          echo "version_type=${VERSION_TYPE}" >> $GITHUB_OUTPUT

      - name: Create tag
        if: steps.check-version.outputs.should_bump == 'true'
        run: |
          git add package.json
          git commit -m "chore: bump version to ${{ steps.bump.outputs.new_version }} [skip ci]"
          git tag ${{ steps.bump.outputs.new_version }}
          git push origin main
          git push origin ${{ steps.bump.outputs.new_version }}

      - name: Publish to npm
        if: steps.check-version.outputs.should_bump == 'true' && env.NODE_AUTH_TOKEN != ''
        run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Create Release
        if: steps.check-version.outputs.should_bump == 'true'
        uses: actions/create-release@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag_name: ${{ steps.bump.outputs.new_version }}
          release_name: Release ${{ steps.bump.outputs.new_version }}
          body: |
            ## What's Changed

            Auto-generated release for version ${{ steps.bump.outputs.new_version }}

            ### Version Bump
            - Type: ${{ steps.bump.outputs.version_type }}
            - Previous version: ${{ steps.bump.outputs.current_version }}
            - New version: ${{ steps.bump.outputs.new_version }}

            ### Trigger
            - Commit message: ${{ github.event.head_commit.message }}

            ### Technical Details
            - Build and test verification completed
            - Automated npm publish and GitHub release
          draft: false
          prerelease: false
